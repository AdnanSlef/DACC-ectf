#!/usr/bin/env python3
"""
Description: Unprotects song by removing metadata, decrypting, and removing integrity checks
Use: Once per song
"""
import json
import struct
import os
import wave
from argparse import ArgumentParser
import numpy as np
from crypto import *  #crypto.py

def make_keys(keys_a, keys_b):
    """Combines key halves into whole keys"""
    keys = [keys_a['key'+str(i+1)+'a']+keys_b['key'+str(i+1)+'b']for i in range(len(keys_a))]
    return keys

def main():
    parser = ArgumentParser(description='program to unprotect songs')
    parser.add_argument('--region-secrets-path', help='File location for the region secrets file', required=True)
    parser.add_argument('--user-secrets-path', help='File location for the user secrets file', required=True)
    parser.add_argument('--infile', help='Path to protected song', required=True)
    parser.add_argument('--outfile', help='Path to save the unprotected song', required=True)
    args = parser.parse_args()

    regions_json = json.load(open(os.path.abspath(args.region_secrets_path)))
    users_json = json.load(open(os.path.abspath(args.user_secrets_path)))
    
    region_secrets = regions_json['region_dict']
    user_secrets = users_json['user_dict']
    
    keys_a = users_json['keys_a']
    keys_b = regions_json['keys_b']
    key1, key2, key3 = make_keys(keys_a, keys_b)

if __name__=='__main__':
    main()
